{"version":3,"file":"static/js/251.bbcf19df.chunk.js","mappings":"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","sources":["Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx","Services/ApiMovies.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  margin: 5px;\n  color: white;\n  width: 200px;\n  height: 25px;\n  border: 1px solid black;\n  outline: none;\n  border-radius: 10px;\n  font-size: 22px;\n  background-color: rgba(0, 0, 0, 0.2);\n  text-align: center;\n  caret-color: orange;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 25px;\n  background-color: black;\n  color: white;\n  border: transparent;\n  outline: transparent;\n  border-radius: 10px;\n  cursor: pointer;\n  &:hover {\n    color: orange;\n  }\n`;\n","import { Button, Form, Input } from './Movies.styled';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'Services/ApiMovies';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [moviesData, setMoviesData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    if (searchQuery === '' || searchQuery === null) {\n      return;\n    }\n\n    async function feachOnQuery() {\n      try {\n        setIsLoading(true);\n        const response = await searchMovies(searchQuery);\n        setMoviesData(response.results);\n      } catch (error) {\n        return alert(`Sorry, please try again!`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    feachOnQuery();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" value={query} onChange={handleChange} />\n        <Button type=\"submit\">Search movie</Button>\n      </Form>\n      {isLoading && <Loader />}\n      {moviesData && <MoviesList trandingMovies={moviesData} />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '31cfad655ad65f43227562d8d472bc2d';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrending() {\n  const response = await axios('trending/all/day', {\n    params: { api_key: KEY },\n  });\n  return response.data;\n}\n\nexport async function searchMovies(query) {\n  const response = await axios('search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios(`movie/${id}`, {\n    params: { api_key: KEY },\n  });\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n  return response.data.results;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ListMovies = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const ItemMovies = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 25%;\n  height: 100%;\n  margin-bottom: 20px;\n`;\n\nexport const ImageMovies = styled.img`\n  width: 95%;\n  height: 100%;\n  transition: width 1000ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  &:hover {\n    width: 100%;\n  }\n`;\n\nexport const LinkMovies = styled(Link)`\n  color: white;\n  text-decoration: none;\n  text-align: center;\n  text-shadow: 0 0 black;\n  &:hover {\n    color: orange;\n  }\n`;\n","import { useLocation } from 'react-router';\nimport {\n  ImageMovies,\n  ItemMovies,\n  ListMovies,\n  LinkMovies,\n} from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({ trandingMovies }) {\n  const location = useLocation();\n\n  return (\n    <>\n      <ListMovies>\n        {trandingMovies.map(\n          ({ id, title, name, backdrop_path, poster_path }) => {\n            const posterUrl = `https://image.tmdb.org/t/p/w200`;\n\n            return (\n              <ItemMovies key={id}>\n                <LinkMovies to={`/movies/${id}`} state={{ from: location }}>\n                  <ImageMovies\n                    src={\n                      poster_path\n                        ? `${posterUrl}${poster_path || backdrop_path}`\n                        : 'https://static.displate.com/857x1200/displate/2022-04-15/7422bfe15b3ea7b5933dffd896e9c7f9_46003a1b7353dc7b5a02949bd074432a.jpg'\n                    }\n                    alt={name}\n                  />\n\n                  {title || name}\n                </LinkMovies>\n              </ItemMovies>\n            );\n          }\n        )}\n      </ListMovies>\n    </>\n  );\n}\n\nMoviesList.propTypes = {\n  trandingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n      backdrop_path: PropTypes.string,\n    })\n  ),\n};\n"],"names":["Form","styled","Input","Button","Movies","useState","query","setQuery","moviesData","setMoviesData","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","searchMovies","response","results","alert","feachOnQuery","onSubmit","e","preventDefault","type","value","onChange","target","Loader","MoviesList","trandingMovies","KEY","getTrending","axios","params","api_key","data","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","ListMovies","ItemMovies","ImageMovies","LinkMovies","Link","location","useLocation","map","title","name","backdrop_path","poster_path","to","state","from","src","alt"],"sourceRoot":""}