{"version":3,"file":"static/js/575.911c23ee.chunk.js","mappings":"wPAEaA,E,OAAQC,GAAAA,GAAH,0I,2BCIH,SAASC,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAG2BE,EAAAA,EAAAA,MAH3B,OAGUC,EAHV,OAIIL,EAAkBK,EAASC,SAJ/B,yEAMWC,MAAM,6BANjB,yBAQIL,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdM,EACD,GAAE,KAGD,iCACE,SAACb,EAAD,6BACCM,IAAa,SAACQ,EAAA,EAAD,IACbV,IAAkB,SAACW,EAAA,EAAD,CAAYX,eAAgBA,MAGpD,C,+LC9BKY,EAAM,mCAIL,SAAeP,IAAtB,4CAAO,OAAP,oBAAO,qGACkBQ,EAAAA,EAAAA,GAAM,mBAAoB,CAC/CC,OAAQ,CAAEC,QAASH,KAFhB,cACCN,EADD,yBAIEA,EAASU,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACkBL,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CAAEC,QAASH,EAAKM,MAAAA,KAFrB,cACCZ,EADD,yBAIEA,EAASU,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACkBP,EAAAA,EAAAA,GAAM,SAAD,OAAUO,GAAM,CAC1CN,OAAQ,CAAEC,QAASH,KAFhB,cACCN,EADD,yBAIEA,EAASU,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,wFACkBP,EAAAA,EAAAA,GAAM,SAAD,OAAUO,EAAV,YAAwB,CAClDN,OAAQ,CAAEC,QAASH,KAFhB,cACCN,EADD,yBAIEA,EAASU,KAAKM,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,wFACkBP,EAAAA,EAAAA,GAAM,SAAD,OAAUO,EAAV,YAAwB,CAClDN,OAAQ,CAAEC,QAASH,KAFhB,cACCN,EADD,yBAIEA,EAASU,KAAKT,SAJhB,kEA9BPM,EAAAA,EAAAA,SAAAA,QADiB,+B,qGCAJW,EAAa3B,EAAAA,GAAAA,GAAH,kHAOV4B,EAAa5B,EAAAA,GAAAA,GAAH,iLAUV6B,EAAc7B,EAAAA,GAAAA,IAAH,8JASX8B,GAAa9B,EAAAA,EAAAA,IAAO+B,EAAAA,GAAP/B,CAAH,2J,SCrBR,SAASc,EAAT,GAAyC,IAAnBX,EAAkB,EAAlBA,eAC7B6B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACN,EAAD,UACGxB,EAAe+B,KACd,YAAsD,IAAnDX,EAAkD,EAAlDA,GAAIY,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YAGjC,OACE,SAACV,EAAD,WACE,UAACE,EAAD,CAAYS,GAAE,kBAAahB,GAAMiB,MAAO,CAAEC,KAAMT,GAAhD,WACE,SAACH,EAAD,CACEa,IACEJ,EAAW,UAPN,mCAOM,OACQA,GAAeD,GAC9B,iIAENM,IAAKP,IAGND,GAASC,MAXGb,EAepB,OAKV,C","sources":["Pages/Home/Home.styled.js","Pages/Home/Home.jsx","Services/ApiMovies.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin: 20px;\n  text-transform: uppercase;\n  text-align: center;\n  color: white;\n  text-shadow: 0 0 black;\n`;\n","import { getTrending } from 'Services/ApiMovies';\nimport { useState, useEffect } from 'react';\nimport { Title } from './Home.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Home() {\n  const [trandingMovies, setTrandingMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        const response = await getTrending();\n        setTrandingMovies(response.results);\n      } catch (error) {\n        return alert('Sorry, please try again!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {isLoading && <Loader />}\n      {trandingMovies && <MoviesList trandingMovies={trandingMovies} />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '31cfad655ad65f43227562d8d472bc2d';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrending() {\n  const response = await axios('trending/all/day', {\n    params: { api_key: KEY },\n  });\n  return response.data;\n}\n\nexport async function searchMovies(query) {\n  const response = await axios('search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios(`movie/${id}`, {\n    params: { api_key: KEY },\n  });\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n  return response.data.results;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ListMovies = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const ItemMovies = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 25%;\n  height: 100%;\n  margin-bottom: 20px;\n`;\n\nexport const ImageMovies = styled.img`\n  width: 95%;\n  height: 100%;\n  transition: width 1000ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  &:hover {\n    width: 100%;\n  }\n`;\n\nexport const LinkMovies = styled(Link)`\n  color: white;\n  text-decoration: none;\n  text-align: center;\n  text-shadow: 0 0 black;\n  &:hover {\n    color: orange;\n  }\n`;\n","import { useLocation } from 'react-router';\nimport {\n  ImageMovies,\n  ItemMovies,\n  ListMovies,\n  LinkMovies,\n} from './MoviesList.styled';\n\nexport default function MoviesList({ trandingMovies }) {\n  const location = useLocation();\n\n  return (\n    <>\n      <ListMovies>\n        {trandingMovies.map(\n          ({ id, title, name, backdrop_path, poster_path }) => {\n            const posterUrl = `https://image.tmdb.org/t/p/w200`;\n\n            return (\n              <ItemMovies key={id}>\n                <LinkMovies to={`/movies/${id}`} state={{ from: location }}>\n                  <ImageMovies\n                    src={\n                      poster_path\n                        ? `${posterUrl}${poster_path || backdrop_path}`\n                        : 'https://static.displate.com/857x1200/displate/2022-04-15/7422bfe15b3ea7b5933dffd896e9c7f9_46003a1b7353dc7b5a02949bd074432a.jpg'\n                    }\n                    alt={name}\n                  />\n\n                  {title || name}\n                </LinkMovies>\n              </ItemMovies>\n            );\n          }\n        )}\n      </ListMovies>\n    </>\n  );\n}\n"],"names":["Title","styled","Home","useState","trandingMovies","setTrandingMovies","isLoading","setIsLoading","useEffect","getTrending","response","results","alert","fetchData","Loader","MoviesList","KEY","axios","params","api_key","data","searchMovies","query","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","ListMovies","ItemMovies","ImageMovies","LinkMovies","Link","location","useLocation","map","title","name","backdrop_path","poster_path","to","state","from","src","alt"],"sourceRoot":""}