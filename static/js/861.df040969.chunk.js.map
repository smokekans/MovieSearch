{"version":3,"file":"static/js/861.df040969.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx","Services/ApiMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const InfoWrapper = styled.div``;\nexport const AdditionalWrapper = styled.div``;\nexport const Image = styled.img``;\nexport const Title = styled.h2`\n  color: white;\n  text-shadow: 1px 0 black;\n  text-align: center;\n  font-size: 36px;\n`;\nexport const Subtitle = styled.h3`\n  color: white;\n  text-shadow: 1px 0 black;\n\n  text-align: center;\n  font-size: 28px;\n`;\nexport const Text = styled.p`\n  color: black;\n\n  text-align: center;\n  font-size: 18px;\n`;\nexport const ListMovies = styled.ul`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n`;\nexport const ItemMovies = styled.li``;\n\nexport const LinkMovies = styled(NavLink)`\n  font-size: 26px;\n  text-decoration: none;\n  color: white;\n  &.active {\n    color: orange;\n  }\n\n  &:hover {\n    color: orange;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  AdditionalWrapper,\n  Image,\n  InfoWrapper,\n  ListMovies,\n  ItemMovies,\n  LinkMovies,\n  MovieWrapper,\n  Subtitle,\n  Text,\n  Title,\n} from './MovieInfo.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MovieInfo({ movieData }) {\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieData;\n  const posterUrl = `https://image.tmdb.org/t/p/w200${poster_path}`;\n  const genresList = genres.map(genre => genre.name).join(', ');\n  const location = useLocation();\n\n  return (\n    <>\n      <MovieWrapper>\n        <Image src={posterUrl} alt={original_title} />\n        <InfoWrapper>\n          <Title>{original_title}</Title>\n          <Text>User Score: {Math.round(vote_average * 10)}%</Text>\n          <Subtitle>Overview</Subtitle>\n          <Text>{overview}</Text>\n          <Subtitle>Genres</Subtitle>\n          <Text>{genresList}</Text>\n        </InfoWrapper>\n        <AdditionalWrapper>\n          <Title>Additional information</Title>\n          <ListMovies>\n            <ItemMovies>\n              <LinkMovies to=\"cast\" state={location.state}>\n                Cast\n              </LinkMovies>\n            </ItemMovies>\n            <ItemMovies>\n              <LinkMovies to=\"reviews\" state={location.state}>\n                Reviews\n              </LinkMovies>\n            </ItemMovies>\n          </ListMovies>\n        </AdditionalWrapper>\n      </MovieWrapper>\n    </>\n  );\n}\n\nMovieInfo.propTypes = {\n  vote_average: PropTypes.number,\n  original_title: PropTypes.string,\n  overview: PropTypes.string,\n  poster_path: PropTypes.string,\n  genres: PropTypes.string,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(Link)`\n  text-transform: uppercase;\n  text-decoration: none;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  color: white;\n  margin: 20px;\n  &:hover {\n    color: orange;\n  }\n`;\n","import Loader from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'Services/ApiMovies';\nimport { BackLink } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movieData, setMovieData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        setIsLoading(true);\n        const response = await getMovieDetails(movieId);\n        setMovieData(response);\n      } catch (error) {\n        return alert('Sorry, try again!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <>\n      <BackLink to={backLink}>Go back</BackLink>\n      {isLoading && <Loader />}\n      {movieData && <MovieInfo movieData={movieData} />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '31cfad655ad65f43227562d8d472bc2d';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrending() {\n  const response = await axios('trending/all/day', {\n    params: { api_key: KEY },\n  });\n  return response.data;\n}\n\nexport async function searchMovies(query) {\n  const response = await axios('search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios(`movie/${id}`, {\n    params: { api_key: KEY },\n  });\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios(`movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios(`movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n  return response.data.results;\n}\n"],"names":["MovieWrapper","styled","InfoWrapper","AdditionalWrapper","Image","Title","Subtitle","Text","ListMovies","ItemMovies","LinkMovies","NavLink","MovieInfo","movieData","poster_path","original_title","vote_average","overview","genres","posterUrl","genresList","map","genre","name","join","location","useLocation","src","alt","Math","round","to","state","BackLink","Link","MovieDetails","useState","setMovieData","isLoading","setIsLoading","movieId","useParams","useEffect","getMovieDetails","response","alert","fetchMovie","backLink","from","Loader","Suspense","fallback","KEY","getTrending","axios","params","api_key","data","searchMovies","query","id","getMovieCredits","cast","getMovieReviews","results"],"sourceRoot":""}